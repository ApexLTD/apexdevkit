[tool.poetry]
name = "pydevtools"
version = "1.0.0"
description = "Apex Development Tools for python."
authors = ["Apex Dev <dev@apex.ge>"]
readme = "README.md"

[tool.bumpversion]
current_version = "1.0.0"
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)"
serialize = ["{major}.{minor}.{patch}"]
search = "{current_version}"
replace = "{new_version}"
regex = false
ignore_missing_version = false
ignore_missing_files = false
tag = false
sign_tags = false
tag_name = "v{new_version}"
tag_message = "Bump version: {current_version} → {new_version}"
allow_dirty = false
commit = false
message = "Bump version: {current_version} → {new_version}"
commit_args = "n"

[[tool.bumpversion.files]]
filename = "pyproject.toml"


[tool.poetry.dependencies]
python = "^3.11"
httpx = "*"
fastapi = "*"
bump-my-version = "^0.21.1"

[tool.poetry.group.dev.dependencies]
pytest = "*"
pytest-cov = "*"
pytest-recording = "*"
coverage = "*"
faker = "*"

[tool.poetry.group.lint.dependencies]
mypy = "*"
ruff = "*"

[tool.mypy]
python_version = "3.11"
ignore_missing_imports = true
strict = true

[tool.ruff]
target-version = "py311"
line-length = 88

exclude = [
    ".git",
    ".mypy_cache",
    ".ruff_cache",
    "venv",
]

lint.select = ["E", "F", "I"]
lint.ignore = []
lint.fixable = ["A", "B", "C", "D", "E", "F", "I"]
lint.unfixable = []

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.coverage.run]
branch = true
source = [
    "pydevtools",
    "tests",
]

[tool.coverage.report]
skip_empty = true
skip_covered = true
show_missing = true
